// For format details, see https://aka.ms/devcontainer.json. For config options, see the
// README at: https://github.com/devcontainers/templates/tree/main/src/dotnet-postgres
{
    "name": "Build-A-Bot Dev Container",
    "dockerComposeFile": "docker-compose.yml",
    "service": "build-a-bot",
    "workspaceFolder": "/workspaces/${localWorkspaceFolderBasename}",
	"customizations": {
		"vscode": {
			"extensions": [
				"ms-dotnettools.csharp",
				"ms-dotnettools.blazorwasm-companion",
				"humao.rest-client",
				"jmrog.vscode-nuget-package-manager",
				"aliasadidev.nugetpackagemanagergui",
				"ms-azuretools.vscode-docker",
				"ms-dotnettools.vscode-dotnet-runtime",
				"GitHub.codespaces",
				"GitHub.vscode-pull-request-github",
				"GitHub.remotehub",
				"GitHub.copilot-nightly",
				"GitHub.copilot-labs",
				"github.vscode-github-actions",
				"ms-vscode-remote.remote-containers"
			],
			"settings": {
				"terminal.integrated.profiles.windows": {
					"PowerShell": {
					  "source": "PowerShell",
					  "args": ["-NoProfile"]
					}
				  },
				  "terminal.integrated.profiles.osx": {
					"zsh": {
					  "path": "zsh",
					  "args": ["-l"]
					}
				  },
				  "terminal.integrated.profiles.linux": {
					"zsh": {
					  "path": "zsh",
					  "args": ["-l"]
					}
				  },
				  "terminal.integrated.defaultProfile.windows": "PowerShell",
				  "terminal.integrated.defaultProfile.osx": "zsh",
				  "terminal.integrated.defaultProfile.linux": "zsh"
			}
		}
	},

	// Features to add to the dev container. More info: https://containers.dev/features.
	"features": {
		// https://github.com/devcontainers/features/tree/main/src/common-utils
		"ghcr.io/devcontainers/features/common-utils:2": {
			"installZsh": "true",
			"configureZshAsDefaultShell": "true",
			"installOhMyZsh": "true",
			"username": "vscode",
			"userUid": "1000",
			"userGid": "1000",
			"upgradePackages": "true",
			"nonFreePackages": "true"
		},
		// https://github.com/rocker-org/devcontainer-features/tree/main/src/apt-packages
		"ghcr.io/rocker-org/devcontainer-features/apt-packages:1": {
			"packages": "wget,sudo,curl,gnupg2",
			"updatePackages": "true"
		},
		// https://github.com/devcontainers-contrib/features/tree/main/src/postgres-asdf
		"ghcr.io/devcontainers-contrib/features/postgres-asdf:1": {
			"version": "latest"
		},
		// https://github.com/devcontainers/features/tree/main/src/dotnet
		"ghcr.io/devcontainers/features/dotnet:1": {
			"version": "latest",
			"runtimeOnly": "false",
			"installUsingApt": "true"
		},
		// https://github.com/devcontainers-contrib/features/tree/main/src/bash-command
		// "ghcr.io/devcontainers-contrib/features/bash-command:1": {
		// 	"command": "bash"
		// },
		// https://github.com/dev-wasm/dev-wasm-feature/blob/main/src/dotnet-wasi/devcontainer-feature.json
		"devwasm.azurecr.io/dev-wasm/dev-wasm-feature/dotnet-wasi:0": {},
		// https://github.com/devcontainers/features/tree/main/src/powershell
		"ghcr.io/devcontainers/features/powershell:1": {
			"version": "latest",
			"modules": ""
		},
		// https://github.com/devcontainers/features/tree/main/src/git
		"ghcr.io/devcontainers/features/git:1": {
			"version": "os-provided",
			"ppa": "true"
		},
		// https://github.com/devcontainers/features/tree/main/src/git-lfs
		"ghcr.io/devcontainers/features/git-lfs:1": {
			"version": "latest",
			"autoPull": true
		},
		// https://github.com/devcontainers/features/tree/main/src/docker-in-docker
		"ghcr.io/devcontainers/features/docker-in-docker:2": {
			"version": "latest",
			"moby": "true",
			"azureDnsAutoDetection": "true",
			"dockerDashComposeVersion": "v2",
			"installDockerBuildx": "true"
		},
		// https://github.com/devcontainers/features/tree/main/src/docker-outside-of-docker
		// "ghcr.io/devcontainers/features/docker-outside-of-docker:1": {
		// 	"version": "latest",
		// 	"moby": "true",
		// 	"dockerDashComposeVersion": "v2",
		// 	"installDockerBuildx": "true"
		// },
		// https://github.com/devcontainers/features/tree/main/src/node
		"ghcr.io/devcontainers/features/node:1": {
			"version": "node",
			"nodeGypDependencies": "true",
			"nvmVersion":"0.39.3"
		},
		// https://github.com/devcontainers/features/tree/main/src/azure-cli
		"ghcr.io/devcontainers/features/azure-cli:1": {
			"version": "latest",
			"extensions": "",
			"installBicep": "true"
		},
		// https://github.com/devcontainers/features/tree/main/src/github-cli
		"ghcr.io/devcontainers/features/github-cli:1": {
			"version": "latest",
			"installDirectlyFromGitHubRelease": "true"
		}
	},

	// Use 'forwardPorts' to make a list of ports inside the container available locally.
	"forwardPorts": [5432,7259],
	"portsAttributes": {
		"7259": {
			"protocol": "https"
		}
	},

	"remoteEnv": {
		"ASPNETCORE_ENVIRONMENT": "Development",
		"ASPNETCORE_Kestrel__Certificates__Default__Password": "${env:ASPNETCORE_Kestrel__Certificates__Default__Password:-aspnetapp}",
		"ASPNETCORE_Kestrel__Certificates__Default__Path": "/home/vscode/.aspnet/https/aspnetapp.pfx",
		"PGHOST": "/var/run/postgresql/"
	},

	"mounts": [
		{
			// ${env:HOME} is null Windows, so use ${env:APPDATA} instead. ${env:APPDATA} is null on Mac/Linux, so this works for both.
			"source": "${env:HOME}${env:APPDATA}/Microsoft/UserSecrets",
			"target": "/.microsoft/usersecrets",
			"type": "bind"
		},
		{
			// ${env:HOME} is null Windows, so use ${env:USERPROFILE} instead. ${env:USERPROFILE} is null on Mac/Linux, so this works for both.
			"source": "${env:HOME}${env:USERPROFILE}/.aspnet/https",
			"target": "/.aspnet/https",
			"type": "bind"
		}
	],

	// Use 'postCreateCommand' to run commands after the container is created.
	"postCreateCommand": "cp -R /.microsoft/usersecrets /home/vscode/.microsoft/usersecrets && chown -R vscode:vscode /home/vscode/.microsoft/usersecrets && cp /.aspnet/https /home/vscode/.aspnet/https && chown -R vscode:vscode /home/vscode/.aspnet/https && dotnet clean || true && dotnet restore && dotnet build --configuration Debug",

	// Uncomment to connect as root instead. More info: https://aka.ms/dev-containers-non-root.
	// "remoteUser": "root"
	"remoteUser": "vscode"
}
