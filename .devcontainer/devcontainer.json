// For format details, see https://aka.ms/devcontainer.json. For config options, see the
// README at: https://github.com/devcontainers/templates/tree/main/src/dotnet-postgres
{
    "name": "C# (.NET) and PostgreSQL",
    "dockerComposeFile": "docker-compose.yml",
    "service": "web",
    "workspaceFolder": "/workspaces/${localWorkspaceFolderBasename}",
	"customizations": {
		"vscode": {
			"extensions": [
				"ms-dotnettools.csharp",
				"ms-dotnettools.blazorwasm-companion",
				"humao.rest-client",
				"jmrog.vscode-nuget-package-manager",
				"aliasadidev.nugetpackagemanagergui",
				"ms-azuretools.vscode-docker",
				"ms-dotnettools.vscode-dotnet-runtime",
				"GitHub.codespaces",
				"GitHub.vscode-pull-request-github",
				"GitHub.remotehub",
				"GitHub.copilot-nightly",
				"GitHub.copilot-labs",
				"github.vscode-github-actions",
				"ms-vscode-remote.remote-containers"
			]
		}
	},

	// Features to add to the dev container. More info: https://containers.dev/features.
	"features": {
		// https://github.com/devcontainers/features/tree/main/src/common-utils
		"ghcr.io/devcontainers/features/common-utils:2": {
			"installZsh": "true",
			"configureZshAsDefaultShell": "true",
			"installOhMyZsh": "true",
			"username": "vscode",
			"userUid": "1000",
			"userGid": "1000",
			"upgradePackages": "true",
			"nonFreePackages": "true"
		},
		// https://github.com/devcontainers/features/tree/main/src/git
		"ghcr.io/devcontainers/features/git:1": {
			"version": "os-provided"
		},
		// https://github.com/devcontainers/features/tree/main/src/git-lfs
		"ghcr.io/devcontainers/features/git-lfs:1": {
			"version": "latest",
			"autoPull": true
		},
		// https://github.com/devcontainers/features/tree/main/src/node
		"ghcr.io/devcontainers/features/node:1": {
			"version": "node"
		},
		// https://github.com/devcontainers/features/tree/main/src/docker-outside-of-docker
		"ghcr.io/devcontainers/features/docker-outside-of-docker:1": {
			"version": "latest",
			"moby": "true",
			"dockerDashComposeVersion": "v2",
			"installDockerBuildx": "true"
		},
		// https://github.com/devcontainers/features/tree/main/src/azure-cli
		"ghcr.io/devcontainers/features/azure-cli:1": {
			"version": "latest"
		}
	},

	// Use 'forwardPorts' to make a list of ports inside the container available locally.
	"forwardPorts": [5432,7259],
	"portsAttributes": {
		"7259": {
			"protocol": "https"
		}
	},

	// "remoteEnv": {
	// },

	"mounts": [
		{
			// ${env:HOME} is null Windows, so use ${env:USERPROFILE} instead. ${env:USERPROFILE} is null on Linux, so this works for both.
			"source": "${env:HOME}${env:APPDATA}/Microsoft/UserSecrets",
			"target": "/home/vscode/.microsoft/usersecrets",
			"type": "bind"
		}
	],

	// [Optional] To reuse of your local HTTPS dev cert:
	//
	// 1. Export it locally using this command:
	//    * Windows PowerShell:
	//        dotnet dev-certs https --trust; dotnet dev-certs https -ep "$env:USERPROFILE/.aspnet/https/aspnetapp.pfx" -p "SecurePwdGoesHere"
	//    * macOS/Linux terminal:
	//        dotnet dev-certs https --trust; dotnet dev-certs https -ep "${HOME}/.aspnet/https/aspnetapp.pfx" -p "SecurePwdGoesHere"
	// 
	// 2. Uncomment these 'remoteEnv' lines:
	//    "remoteEnv": {
	// 	      "ASPNETCORE_Kestrel__Certificates__Default__Password": "SecurePwdGoesHere",
	//        "ASPNETCORE_Kestrel__Certificates__Default__Path": "/home/vscode/.aspnet/https/aspnetapp.pfx",
	//    },
	//
	// 3. Do one of the following depending on your scenario:
	//    * When using GitHub Codespaces and/or Remote - Containers:
	//      1. Start the container
	//      2. Drag ~/.aspnet/https/aspnetapp.pfx into the root of the file explorer
	//      3. Open a terminal in VS Code and run "mkdir -p /home/vscode/.aspnet/https && mv aspnetapp.pfx /home/vscode/.aspnet/https"
	//
	//    * If only using Remote - Containers with a local container, uncomment this line instead:
	//      "mounts": [ "source=${env:HOME}${env:USERPROFILE}/.aspnet/https,target=/home/vscode/.aspnet/https,type=bind" ],

	// Use 'postCreateCommand' to run commands after the container is created.
	"postCreateCommand": "sudo chsh \"$(id -un)\" --shell \"/usr/bin/zsh\" && dotnet clean || true && dotnet restore && dotnet build --configuration Debug",

	// Uncomment to connect as root instead. More info: https://aka.ms/dev-containers-non-root.
	// "remoteUser": "root"
	"remoteUser": "vscode"
}
